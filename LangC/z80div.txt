変数共用
2014.9.1 追記

6502 で先に投稿された「変数共用」を、Z80 に移植したものが投稿されました。



	LD HL, 12345 ; 10 (11)
	LD C, 10 ; 7 (8)
	LD B, 16 ; 7 (8)
	XOR A ; 4 (5)
LOOP:
	ADD HL, HL ; 11 (12)
	RLA ; 4 (5)
	CP C ; 4 (5)
	JR C, SHIFT ; 12 / 7 (13 / 8)

	SUB C ; 4 (5)
	INC L ; 4 (5)
SHIFT:
	DJNZ LOOP ; 13 / 8 (14 / 9)

移植とはいえ、処理は Z80 で速くなるように若干順序を変えています。しかし、基本的には同じことをしています。

HL と A で 24bit のローテートを行い、C を除数として A と演算しています。


投稿プログラムでは、ここまでのプログラムに合わせて A に除数を設定したうえで C にコピーしてくださっていました。しかし、レジスタの使い方に制約は設けていないので、ここでは最初から C に除数を入れています。

   +-------+-------+-------+
   |   A       H       L   |   <<=1
   +-------+-------+-------+

   |  (-)  |

   +-------+-------+-------+
   |   C       0       0   |   DIVISOR
   +-------+-------+-------+

  ・   まず A H L を２倍にする.
  ・   C が Aから引けるなら引く
  ・   引けたら L++する

  これを16回繰り返す.


  最後の A reg が剰余 / HL が除算結果
  ~~~~~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~
